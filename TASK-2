#include <SoftwareSerial.h>
#include <TinyGPS++.h>

// Create instances of the software serial for GPS and GSM communication
SoftwareSerial ssGPS(4, 3); // GPS RX, TX
SoftwareSerial ssGSM(7, 8); // GSM TX, RX

TinyGPSPlus gps; // GPS object

// Phone number to send location (replace with your phone number)
String phoneNumber = "+1234567890"; // Replace with the recipient's phone number

void setup() {
  // Start serial communication for debugging
  Serial.begin(9600);
  ssGPS.begin(9600);  // GPS baud rate
  ssGSM.begin(9600);  // GSM baud rate

  // Initialize GSM module
  delay(1000);
  ssGSM.println("AT"); // Test communication with GSM
  delay(1000);
  ssGSM.println("AT+CMGF=1"); // Set GSM to text mode
  delay(1000);
}

void loop() {
  // Feed GPS data to the GPS object
  while (ssGPS.available() > 0) {
    gps.encode(ssGPS.read());
  }

  // Check if a new GPS fix is available
  if (gps.location.isUpdated()) {
    double latitude = gps.location.lat();
    double longitude = gps.location.lng();

    // Print the coordinates to the Serial Monitor
    Serial.print("Latitude= "); 
    Serial.print(latitude, 6);
    Serial.print(" Longitude= ");
    Serial.println(longitude, 6);

    // Prepare the SMS message with the GPS coordinates
    String message = "Vehicle Location: \nLatitude: " + String(latitude, 6) + "\nLongitude: " + String(longitude, 6);

    // Send the SMS with the GPS coordinates
    sendSMS(message);
  }

  delay(10000); // Wait for 10 seconds before sending the next message
}

void sendSMS(String message) {
  // Send SMS command to GSM module
  ssGSM.println("AT+CMGS=\"" + phoneNumber + "\""); // Specify phone number
  delay(1000);

  ssGSM.println(message); // The message content
  delay(1000);

  ssGSM.write(26); // ASCII code of Ctrl+Z to send the message
  delay(1000);
}
